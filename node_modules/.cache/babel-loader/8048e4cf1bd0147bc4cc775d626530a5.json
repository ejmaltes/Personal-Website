{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\"use strict\";\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar escapeTextForBrowser = require(\"./escapeTextForBrowser\");\n\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\n\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null || DOMProperty.hasBooleanValue[name] && !value || DOMProperty.hasNumericValue[name] && isNaN(value) || DOMProperty.hasPositiveNumericValue[name] && value < 1 || DOMProperty.hasOverloadedBooleanValue[name] && value === false;\n}\n\nvar processAttributeNameAndPrefix = memoizeStringOnly(function (name) {\n  return escapeTextForBrowser(name) + '=\"';\n});\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function (name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase(); // data-* attributes should be lowercase; suggest the lowercase version\n\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null; // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n\n    \"production\" !== process.env.NODE_ENV ? warning(standardName == null, 'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?') : null;\n  };\n}\n/**\n * Operations for dealing with DOM properties.\n */\n\n\nvar DOMPropertyOperations = {\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) + escapeTextForBrowser(id) + '\"';\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n\n      var attributeName = DOMProperty.getAttributeName[name];\n\n      if (DOMProperty.hasBooleanValue[name] || DOMProperty.hasOverloadedBooleanValue[name] && value === true) {\n        return escapeTextForBrowser(attributeName);\n      }\n\n      return processAttributeNameAndPrefix(attributeName) + escapeTextForBrowser(value) + '\"';\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n\n      return processAttributeNameAndPrefix(name) + escapeTextForBrowser(value) + '\"';\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name]; // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n\n        if (!DOMProperty.hasSideEffects[name] || '' + node[propName] !== '' + value) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) && DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);\n\n        if (!DOMProperty.hasSideEffects[name] || '' + node[propName] !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n};\nmodule.exports = DOMPropertyOperations;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/DOMPropertyOperations.js"],"names":["DOMProperty","require","escapeTextForBrowser","memoizeStringOnly","warning","shouldIgnoreValue","name","value","hasBooleanValue","hasNumericValue","isNaN","hasPositiveNumericValue","hasOverloadedBooleanValue","processAttributeNameAndPrefix","process","env","NODE_ENV","reactProps","children","dangerouslySetInnerHTML","key","ref","warnedProperties","warnUnknownProperty","hasOwnProperty","lowerCasedName","toLowerCase","standardName","isCustomAttribute","getPossibleStandardName","DOMPropertyOperations","createMarkupForID","id","ID_ATTRIBUTE_NAME","createMarkupForProperty","isStandardName","attributeName","getAttributeName","setValueForProperty","node","mutationMethod","getMutationMethod","deleteValueForProperty","mustUseAttribute","setAttribute","propName","getPropertyName","hasSideEffects","removeAttribute","undefined","defaultValue","getDefaultValueForProperty","nodeName","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,qBAAD,CAA/B;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAArB;;AAEA,SAASI,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AACtC,SAAOA,KAAK,IAAI,IAAT,IACJP,WAAW,CAACQ,eAAZ,CAA4BF,IAA5B,KAAqC,CAACC,KADlC,IAEJP,WAAW,CAACS,eAAZ,CAA4BH,IAA5B,KAAqCI,KAAK,CAACH,KAAD,CAFtC,IAGJP,WAAW,CAACW,uBAAZ,CAAoCL,IAApC,KAA8CC,KAAK,GAAG,CAHlD,IAIJP,WAAW,CAACY,yBAAZ,CAAsCN,IAAtC,KAA+CC,KAAK,KAAK,KAJ5D;AAKD;;AAED,IAAIM,6BAA6B,GAAGV,iBAAiB,CAAC,UAASG,IAAT,EAAe;AACnE,SAAOJ,oBAAoB,CAACI,IAAD,CAApB,GAA6B,IAApC;AACD,CAFoD,CAArD;;AAIA,IAAI,iBAAiBQ,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AACzC,MAAIC,UAAU,GAAG;AACfC,IAAAA,QAAQ,EAAE,IADK;AAEfC,IAAAA,uBAAuB,EAAE,IAFV;AAGfC,IAAAA,GAAG,EAAE,IAHU;AAIfC,IAAAA,GAAG,EAAE;AAJU,GAAjB;AAMA,MAAIC,gBAAgB,GAAG,EAAvB;;AAEA,MAAIC,mBAAmB,GAAG,UAASjB,IAAT,EAAe;AACvC,QAAIW,UAAU,CAACO,cAAX,CAA0BlB,IAA1B,KAAmCW,UAAU,CAACX,IAAD,CAA7C,IACAgB,gBAAgB,CAACE,cAAjB,CAAgClB,IAAhC,KAAyCgB,gBAAgB,CAAChB,IAAD,CAD7D,EACqE;AACnE;AACD;;AAEDgB,IAAAA,gBAAgB,CAAChB,IAAD,CAAhB,GAAyB,IAAzB;AACA,QAAImB,cAAc,GAAGnB,IAAI,CAACoB,WAAL,EAArB,CAPuC,CASvC;;AACA,QAAIC,YAAY,GACd3B,WAAW,CAAC4B,iBAAZ,CAA8BH,cAA9B,IACEA,cADF,GAEAzB,WAAW,CAAC6B,uBAAZ,CAAoCL,cAApC,CAAmDC,cAAnD,IACEzB,WAAW,CAAC6B,uBAAZ,CAAoCJ,cAApC,CADF,GAEE,IALJ,CAVuC,CAkBvC;AACA;;AACC,qBAAiBX,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCZ,OAAO,CAC9CuB,YAAY,IAAI,IAD8B,EAE9C,0BAA0BrB,IAA1B,GAAiC,iBAAjC,GAAqDqB,YAArD,GAAoE,GAFtB,CAA/C,GAGG,IAHJ;AAKD,GAzBD;AA0BD;AAED;;;;;AAGA,IAAIG,qBAAqB,GAAG;AAE1B;;;;;;AAMAC,EAAAA,iBAAiB,EAAE,UAASC,EAAT,EAAa;AAC9B,WAAOnB,6BAA6B,CAACb,WAAW,CAACiC,iBAAb,CAA7B,GACL/B,oBAAoB,CAAC8B,EAAD,CADf,GACsB,GAD7B;AAED,GAXyB;;AAa1B;;;;;;;AAOAE,EAAAA,uBAAuB,EAAE,UAAS5B,IAAT,EAAeC,KAAf,EAAsB;AAC7C,QAAIP,WAAW,CAACmC,cAAZ,CAA2BX,cAA3B,CAA0ClB,IAA1C,KACAN,WAAW,CAACmC,cAAZ,CAA2B7B,IAA3B,CADJ,EACsC;AACpC,UAAID,iBAAiB,CAACC,IAAD,EAAOC,KAAP,CAArB,EAAoC;AAClC,eAAO,EAAP;AACD;;AACD,UAAI6B,aAAa,GAAGpC,WAAW,CAACqC,gBAAZ,CAA6B/B,IAA7B,CAApB;;AACA,UAAIN,WAAW,CAACQ,eAAZ,CAA4BF,IAA5B,KACCN,WAAW,CAACY,yBAAZ,CAAsCN,IAAtC,KAA+CC,KAAK,KAAK,IAD9D,EACqE;AACnE,eAAOL,oBAAoB,CAACkC,aAAD,CAA3B;AACD;;AACD,aAAOvB,6BAA6B,CAACuB,aAAD,CAA7B,GACLlC,oBAAoB,CAACK,KAAD,CADf,GACyB,GADhC;AAED,KAZD,MAYO,IAAIP,WAAW,CAAC4B,iBAAZ,CAA8BtB,IAA9B,CAAJ,EAAyC;AAC9C,UAAIC,KAAK,IAAI,IAAb,EAAmB;AACjB,eAAO,EAAP;AACD;;AACD,aAAOM,6BAA6B,CAACP,IAAD,CAA7B,GACLJ,oBAAoB,CAACK,KAAD,CADf,GACyB,GADhC;AAED,KANM,MAMA,IAAI,iBAAiBO,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AAChDO,MAAAA,mBAAmB,CAACjB,IAAD,CAAnB;AACD;;AACD,WAAO,IAAP;AACD,GA3CyB;;AA6C1B;;;;;;;AAOAgC,EAAAA,mBAAmB,EAAE,UAASC,IAAT,EAAejC,IAAf,EAAqBC,KAArB,EAA4B;AAC/C,QAAIP,WAAW,CAACmC,cAAZ,CAA2BX,cAA3B,CAA0ClB,IAA1C,KACAN,WAAW,CAACmC,cAAZ,CAA2B7B,IAA3B,CADJ,EACsC;AACpC,UAAIkC,cAAc,GAAGxC,WAAW,CAACyC,iBAAZ,CAA8BnC,IAA9B,CAArB;;AACA,UAAIkC,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACD,IAAD,EAAOhC,KAAP,CAAd;AACD,OAFD,MAEO,IAAIF,iBAAiB,CAACC,IAAD,EAAOC,KAAP,CAArB,EAAoC;AACzC,aAAKmC,sBAAL,CAA4BH,IAA5B,EAAkCjC,IAAlC;AACD,OAFM,MAEA,IAAIN,WAAW,CAAC2C,gBAAZ,CAA6BrC,IAA7B,CAAJ,EAAwC;AAC7C;AACA;AACAiC,QAAAA,IAAI,CAACK,YAAL,CAAkB5C,WAAW,CAACqC,gBAAZ,CAA6B/B,IAA7B,CAAlB,EAAsD,KAAKC,KAA3D;AACD,OAJM,MAIA;AACL,YAAIsC,QAAQ,GAAG7C,WAAW,CAAC8C,eAAZ,CAA4BxC,IAA5B,CAAf,CADK,CAEL;AACA;;AACA,YAAI,CAACN,WAAW,CAAC+C,cAAZ,CAA2BzC,IAA3B,CAAD,IACC,KAAKiC,IAAI,CAACM,QAAD,CAAV,KAA2B,KAAKtC,KADpC,EAC4C;AAC1C;AACA;AACAgC,UAAAA,IAAI,CAACM,QAAD,CAAJ,GAAiBtC,KAAjB;AACD;AACF;AACF,KAtBD,MAsBO,IAAIP,WAAW,CAAC4B,iBAAZ,CAA8BtB,IAA9B,CAAJ,EAAyC;AAC9C,UAAIC,KAAK,IAAI,IAAb,EAAmB;AACjBgC,QAAAA,IAAI,CAACS,eAAL,CAAqB1C,IAArB;AACD,OAFD,MAEO;AACLiC,QAAAA,IAAI,CAACK,YAAL,CAAkBtC,IAAlB,EAAwB,KAAKC,KAA7B;AACD;AACF,KANM,MAMA,IAAI,iBAAiBO,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AAChDO,MAAAA,mBAAmB,CAACjB,IAAD,CAAnB;AACD;AACF,GApFyB;;AAsF1B;;;;;;AAMAoC,EAAAA,sBAAsB,EAAE,UAASH,IAAT,EAAejC,IAAf,EAAqB;AAC3C,QAAIN,WAAW,CAACmC,cAAZ,CAA2BX,cAA3B,CAA0ClB,IAA1C,KACAN,WAAW,CAACmC,cAAZ,CAA2B7B,IAA3B,CADJ,EACsC;AACpC,UAAIkC,cAAc,GAAGxC,WAAW,CAACyC,iBAAZ,CAA8BnC,IAA9B,CAArB;;AACA,UAAIkC,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACD,IAAD,EAAOU,SAAP,CAAd;AACD,OAFD,MAEO,IAAIjD,WAAW,CAAC2C,gBAAZ,CAA6BrC,IAA7B,CAAJ,EAAwC;AAC7CiC,QAAAA,IAAI,CAACS,eAAL,CAAqBhD,WAAW,CAACqC,gBAAZ,CAA6B/B,IAA7B,CAArB;AACD,OAFM,MAEA;AACL,YAAIuC,QAAQ,GAAG7C,WAAW,CAAC8C,eAAZ,CAA4BxC,IAA5B,CAAf;AACA,YAAI4C,YAAY,GAAGlD,WAAW,CAACmD,0BAAZ,CACjBZ,IAAI,CAACa,QADY,EAEjBP,QAFiB,CAAnB;;AAIA,YAAI,CAAC7C,WAAW,CAAC+C,cAAZ,CAA2BzC,IAA3B,CAAD,IACC,KAAKiC,IAAI,CAACM,QAAD,CAAV,KAA0BK,YAD9B,EAC4C;AAC1CX,UAAAA,IAAI,CAACM,QAAD,CAAJ,GAAiBK,YAAjB;AACD;AACF;AACF,KAlBD,MAkBO,IAAIlD,WAAW,CAAC4B,iBAAZ,CAA8BtB,IAA9B,CAAJ,EAAyC;AAC9CiC,MAAAA,IAAI,CAACS,eAAL,CAAqB1C,IAArB;AACD,KAFM,MAEA,IAAI,iBAAiBQ,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AAChDO,MAAAA,mBAAmB,CAACjB,IAAD,CAAnB;AACD;AACF;AApHyB,CAA5B;AAwHA+C,MAAM,CAACC,OAAP,GAAiBxB,qBAAjB","sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar DOMProperty = require(\"./DOMProperty\");\n\nvar escapeTextForBrowser = require(\"./escapeTextForBrowser\");\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\nvar warning = require(\"./warning\");\n\nfunction shouldIgnoreValue(name, value) {\n  return value == null ||\n    (DOMProperty.hasBooleanValue[name] && !value) ||\n    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||\n    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||\n    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);\n}\n\nvar processAttributeNameAndPrefix = memoizeStringOnly(function(name) {\n  return escapeTextForBrowser(name) + '=\"';\n});\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function(name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] ||\n        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = (\n      DOMProperty.isCustomAttribute(lowerCasedName) ?\n        lowerCasedName :\n      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?\n        DOMProperty.getPossibleStandardName[lowerCasedName] :\n        null\n    );\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      standardName == null,\n      'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'\n    ) : null);\n\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function(id) {\n    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) +\n      escapeTextForBrowser(id) + '\"';\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function(name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      if (shouldIgnoreValue(name, value)) {\n        return '';\n      }\n      var attributeName = DOMProperty.getAttributeName[name];\n      if (DOMProperty.hasBooleanValue[name] ||\n          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {\n        return escapeTextForBrowser(attributeName);\n      }\n      return processAttributeNameAndPrefix(attributeName) +\n        escapeTextForBrowser(value) + '\"';\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return processAttributeNameAndPrefix(name) +\n        escapeTextForBrowser(value) + '\"';\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function(node, name, value) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(name, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== ('' + value)) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        node.removeAttribute(name);\n      } else {\n        node.setAttribute(name, '' + value);\n      }\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function(node, name) {\n    if (DOMProperty.isStandardName.hasOwnProperty(name) &&\n        DOMProperty.isStandardName[name]) {\n      var mutationMethod = DOMProperty.getMutationMethod[name];\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (DOMProperty.mustUseAttribute[name]) {\n        node.removeAttribute(DOMProperty.getAttributeName[name]);\n      } else {\n        var propName = DOMProperty.getPropertyName[name];\n        var defaultValue = DOMProperty.getDefaultValueForProperty(\n          node.nodeName,\n          propName\n        );\n        if (!DOMProperty.hasSideEffects[name] ||\n            ('' + node[propName]) !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (\"production\" !== process.env.NODE_ENV) {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n"]},"metadata":{},"sourceType":"script"}