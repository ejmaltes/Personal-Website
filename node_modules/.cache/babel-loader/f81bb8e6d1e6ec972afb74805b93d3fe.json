{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMImg\n */\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\n\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar ReactDOM = require(\"./ReactDOM\"); // Store a reference to the <img> `ReactDOMComponent`. TODO: use string\n\n\nvar img = ReactElement.createFactory(ReactDOM.img.type);\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\n\nvar ReactDOMImg = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n  render: function () {\n    return img(this.props);\n  },\n  componentDidMount: function () {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');\n  }\n});\nmodule.exports = ReactDOMImg;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/ReactDOMImg.js"],"names":["EventConstants","require","LocalEventTrapMixin","ReactBrowserComponentMixin","ReactCompositeComponent","ReactElement","ReactDOM","img","createFactory","type","ReactDOMImg","createClass","displayName","tagName","mixins","render","props","componentDidMount","trapBubbledEvent","topLevelTypes","topLoad","topError","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIE,0BAA0B,GAAGF,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIG,uBAAuB,GAAGH,OAAO,CAAC,2BAAD,CAArC;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,YAAD,CAAtB,C,CAEA;;;AACA,IAAIM,GAAG,GAAGF,YAAY,CAACG,aAAb,CAA2BF,QAAQ,CAACC,GAAT,CAAaE,IAAxC,CAAV;AAEA;;;;;;;AAMA,IAAIC,WAAW,GAAGN,uBAAuB,CAACO,WAAxB,CAAoC;AACpDC,EAAAA,WAAW,EAAE,aADuC;AAEpDC,EAAAA,OAAO,EAAE,KAF2C;AAIpDC,EAAAA,MAAM,EAAE,CAACX,0BAAD,EAA6BD,mBAA7B,CAJ4C;AAMpDa,EAAAA,MAAM,EAAE,YAAW;AACjB,WAAOR,GAAG,CAAC,KAAKS,KAAN,CAAV;AACD,GARmD;AAUpDC,EAAAA,iBAAiB,EAAE,YAAW;AAC5B,SAAKC,gBAAL,CAAsBlB,cAAc,CAACmB,aAAf,CAA6BC,OAAnD,EAA4D,MAA5D;AACA,SAAKF,gBAAL,CAAsBlB,cAAc,CAACmB,aAAf,CAA6BE,QAAnD,EAA6D,OAA7D;AACD;AAbmD,CAApC,CAAlB;AAgBAC,MAAM,CAACC,OAAP,GAAiBb,WAAjB","sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMImg\n */\n\n\"use strict\";\n\nvar EventConstants = require(\"./EventConstants\");\nvar LocalEventTrapMixin = require(\"./LocalEventTrapMixin\");\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactDOM = require(\"./ReactDOM\");\n\n// Store a reference to the <img> `ReactDOMComponent`. TODO: use string\nvar img = ReactElement.createFactory(ReactDOM.img.type);\n\n/**\n * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to\n * capture it on the <img> element itself. There are lots of hacks we could do\n * to accomplish this, but the most reliable is to make <img> a composite\n * component and use `componentDidMount` to attach the event handlers.\n */\nvar ReactDOMImg = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMImg',\n  tagName: 'IMG',\n\n  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],\n\n  render: function() {\n    return img(this.props);\n  },\n\n  componentDidMount: function() {\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');\n    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');\n  }\n});\n\nmodule.exports = ReactDOMImg;\n"]},"metadata":{},"sourceType":"script"}