{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * @providesModule ReactCSSTransitionGroupChild\n */\n\"use strict\";\n\nvar React = require(\"./React\");\n\nvar CSSCore = require(\"./CSSCore\");\n\nvar ReactTransitionEvents = require(\"./ReactTransitionEvents\");\n\nvar onlyChild = require(\"./onlyChild\"); // We don't remove the element from the DOM until we receive an animationend or\n// transitionend event. If the user screws up and forgets to add an animation\n// their node will be stuck in the DOM forever, so we detect if an animation\n// does not start and if it doesn't, we just call the end listener immediately.\n\n\nvar TICK = 17;\nvar NO_EVENT_TIMEOUT = 5000;\nvar noEventListener = null;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  noEventListener = function () {\n    console.warn('transition(): tried to perform an animation without ' + 'an animationend or transitionend event after timeout (' + NO_EVENT_TIMEOUT + 'ms). You should either disable this ' + 'transition in JS or add a CSS animation/transition.');\n  };\n}\n\nvar ReactCSSTransitionGroupChild = React.createClass({\n  displayName: 'ReactCSSTransitionGroupChild',\n  transition: function (animationType, finishCallback) {\n    var node = this.getDOMNode();\n    var className = this.props.name + '-' + animationType;\n    var activeClassName = className + '-active';\n    var noEventTimeout = null;\n\n    var endListener = function (e) {\n      if (e && e.target !== node) {\n        return;\n      }\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        clearTimeout(noEventTimeout);\n      }\n\n      CSSCore.removeClass(node, className);\n      CSSCore.removeClass(node, activeClassName);\n      ReactTransitionEvents.removeEndEventListener(node, endListener); // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n\n      finishCallback && finishCallback();\n    };\n\n    ReactTransitionEvents.addEndEventListener(node, endListener);\n    CSSCore.addClass(node, className); // Need to do this to actually trigger a transition.\n\n    this.queueClass(activeClassName);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      noEventTimeout = setTimeout(noEventListener, NO_EVENT_TIMEOUT);\n    }\n  },\n  queueClass: function (className) {\n    this.classNameQueue.push(className);\n\n    if (!this.timeout) {\n      this.timeout = setTimeout(this.flushClassNameQueue, TICK);\n    }\n  },\n  flushClassNameQueue: function () {\n    if (this.isMounted()) {\n      this.classNameQueue.forEach(CSSCore.addClass.bind(CSSCore, this.getDOMNode()));\n    }\n\n    this.classNameQueue.length = 0;\n    this.timeout = null;\n  },\n  componentWillMount: function () {\n    this.classNameQueue = [];\n  },\n  componentWillUnmount: function () {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  },\n  componentWillEnter: function (done) {\n    if (this.props.enter) {\n      this.transition('enter', done);\n    } else {\n      done();\n    }\n  },\n  componentWillLeave: function (done) {\n    if (this.props.leave) {\n      this.transition('leave', done);\n    } else {\n      done();\n    }\n  },\n  render: function () {\n    return onlyChild(this.props.children);\n  }\n});\nmodule.exports = ReactCSSTransitionGroupChild;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/ReactCSSTransitionGroupChild.js"],"names":["React","require","CSSCore","ReactTransitionEvents","onlyChild","TICK","NO_EVENT_TIMEOUT","noEventListener","process","env","NODE_ENV","console","warn","ReactCSSTransitionGroupChild","createClass","displayName","transition","animationType","finishCallback","node","getDOMNode","className","props","name","activeClassName","noEventTimeout","endListener","e","target","clearTimeout","removeClass","removeEndEventListener","addEndEventListener","addClass","queueClass","setTimeout","classNameQueue","push","timeout","flushClassNameQueue","isMounted","forEach","bind","length","componentWillMount","componentWillUnmount","componentWillEnter","done","enter","componentWillLeave","leave","render","children","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * @providesModule ReactCSSTransitionGroupChild\n */\n\n\"use strict\";\n\nvar React = require(\"./React\");\n\nvar CSSCore = require(\"./CSSCore\");\nvar ReactTransitionEvents = require(\"./ReactTransitionEvents\");\n\nvar onlyChild = require(\"./onlyChild\");\n\n// We don't remove the element from the DOM until we receive an animationend or\n// transitionend event. If the user screws up and forgets to add an animation\n// their node will be stuck in the DOM forever, so we detect if an animation\n// does not start and if it doesn't, we just call the end listener immediately.\nvar TICK = 17;\nvar NO_EVENT_TIMEOUT = 5000;\n\nvar noEventListener = null;\n\n\nif (\"production\" !== process.env.NODE_ENV) {\n  noEventListener = function() {\n    console.warn(\n      'transition(): tried to perform an animation without ' +\n      'an animationend or transitionend event after timeout (' +\n      NO_EVENT_TIMEOUT + 'ms). You should either disable this ' +\n      'transition in JS or add a CSS animation/transition.'\n    );\n  };\n}\n\nvar ReactCSSTransitionGroupChild = React.createClass({\n  displayName: 'ReactCSSTransitionGroupChild',\n\n  transition: function(animationType, finishCallback) {\n    var node = this.getDOMNode();\n    var className = this.props.name + '-' + animationType;\n    var activeClassName = className + '-active';\n    var noEventTimeout = null;\n\n    var endListener = function(e) {\n      if (e && e.target !== node) {\n        return;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        clearTimeout(noEventTimeout);\n      }\n\n      CSSCore.removeClass(node, className);\n      CSSCore.removeClass(node, activeClassName);\n\n      ReactTransitionEvents.removeEndEventListener(node, endListener);\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      finishCallback && finishCallback();\n    };\n\n    ReactTransitionEvents.addEndEventListener(node, endListener);\n\n    CSSCore.addClass(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClass(activeClassName);\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      noEventTimeout = setTimeout(noEventListener, NO_EVENT_TIMEOUT);\n    }\n  },\n\n  queueClass: function(className) {\n    this.classNameQueue.push(className);\n\n    if (!this.timeout) {\n      this.timeout = setTimeout(this.flushClassNameQueue, TICK);\n    }\n  },\n\n  flushClassNameQueue: function() {\n    if (this.isMounted()) {\n      this.classNameQueue.forEach(\n        CSSCore.addClass.bind(CSSCore, this.getDOMNode())\n      );\n    }\n    this.classNameQueue.length = 0;\n    this.timeout = null;\n  },\n\n  componentWillMount: function() {\n    this.classNameQueue = [];\n  },\n\n  componentWillUnmount: function() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  },\n\n  componentWillEnter: function(done) {\n    if (this.props.enter) {\n      this.transition('enter', done);\n    } else {\n      done();\n    }\n  },\n\n  componentWillLeave: function(done) {\n    if (this.props.leave) {\n      this.transition('leave', done);\n    } else {\n      done();\n    }\n  },\n\n  render: function() {\n    return onlyChild(this.props.children);\n  }\n});\n\nmodule.exports = ReactCSSTransitionGroupChild;\n"]},"metadata":{},"sourceType":"script"}