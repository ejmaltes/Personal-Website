{"ast":null,"code":"/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule monitorCodeUse\n */\n\"use strict\";\n\nvar invariant = require(\"./invariant\");\n/**\n * Provides open-source compatible instrumentation for monitoring certain API\n * uses before we're ready to issue a warning or refactor. It accepts an event\n * name which may only contain the characters [a-z0-9_] and an optional data\n * object with further information.\n */\n\n\nfunction monitorCodeUse(eventName, data) {\n  \"production\" !== process.env.NODE_ENV ? invariant(eventName && !/[^a-z0-9_]/.test(eventName), 'You must provide an eventName using only the characters [a-z0-9_]') : invariant(eventName && !/[^a-z0-9_]/.test(eventName));\n}\n\nmodule.exports = monitorCodeUse;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/monitorCodeUse.js"],"names":["invariant","require","monitorCodeUse","eventName","data","process","env","NODE_ENV","test","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAEA;;;;;;;;AAOA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,IAAnC,EAAyC;AACtC,mBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCP,SAAS,CAChDG,SAAS,IAAI,CAAC,aAAaK,IAAb,CAAkBL,SAAlB,CADkC,EAEhD,mEAFgD,CAAjD,GAGGH,SAAS,CAACG,SAAS,IAAI,CAAC,aAAaK,IAAb,CAAkBL,SAAlB,CAAf,CAHb;AAID;;AAEDM,MAAM,CAACC,OAAP,GAAiBR,cAAjB","sourcesContent":["/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule monitorCodeUse\n */\n\n\"use strict\";\n\nvar invariant = require(\"./invariant\");\n\n/**\n * Provides open-source compatible instrumentation for monitoring certain API\n * uses before we're ready to issue a warning or refactor. It accepts an event\n * name which may only contain the characters [a-z0-9_] and an optional data\n * object with further information.\n */\n\nfunction monitorCodeUse(eventName, data) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    eventName && !/[^a-z0-9_]/.test(eventName),\n    'You must provide an eventName using only the characters [a-z0-9_]'\n  ) : invariant(eventName && !/[^a-z0-9_]/.test(eventName)));\n}\n\nmodule.exports = monitorCodeUse;\n"]},"metadata":{},"sourceType":"script"}