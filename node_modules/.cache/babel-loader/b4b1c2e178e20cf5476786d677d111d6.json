{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedStateMixin\n * @typechecks static-only\n */\n\"use strict\";\n\nvar ReactLink = require(\"./ReactLink\");\n\nvar ReactStateSetters = require(\"./ReactStateSetters\");\n/**\n * A simple mixin around ReactLink.forState().\n */\n\n\nvar LinkedStateMixin = {\n  /**\n   * Create a ReactLink that's linked to part of this component's state. The\n   * ReactLink will have the current value of this.state[key] and will call\n   * setState() when a change is requested.\n   *\n   * @param {string} key state key to update. Note: you may want to use keyOf()\n   * if you're using Google Closure Compiler advanced mode.\n   * @return {ReactLink} ReactLink instance linking to the state.\n   */\n  linkState: function (key) {\n    return new ReactLink(this.state[key], ReactStateSetters.createStateKeySetter(this, key));\n  }\n};\nmodule.exports = LinkedStateMixin;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/LinkedStateMixin.js"],"names":["ReactLink","require","ReactStateSetters","LinkedStateMixin","linkState","key","state","createStateKeySetter","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAA/B;AAEA;;;;;AAGA,IAAIE,gBAAgB,GAAG;AACrB;;;;;;;;;AASAC,EAAAA,SAAS,EAAE,UAASC,GAAT,EAAc;AACvB,WAAO,IAAIL,SAAJ,CACL,KAAKM,KAAL,CAAWD,GAAX,CADK,EAELH,iBAAiB,CAACK,oBAAlB,CAAuC,IAAvC,EAA6CF,GAA7C,CAFK,CAAP;AAID;AAfoB,CAAvB;AAkBAG,MAAM,CAACC,OAAP,GAAiBN,gBAAjB","sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedStateMixin\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar ReactLink = require(\"./ReactLink\");\nvar ReactStateSetters = require(\"./ReactStateSetters\");\n\n/**\n * A simple mixin around ReactLink.forState().\n */\nvar LinkedStateMixin = {\n  /**\n   * Create a ReactLink that's linked to part of this component's state. The\n   * ReactLink will have the current value of this.state[key] and will call\n   * setState() when a change is requested.\n   *\n   * @param {string} key state key to update. Note: you may want to use keyOf()\n   * if you're using Google Closure Compiler advanced mode.\n   * @return {ReactLink} ReactLink instance linking to the state.\n   */\n  linkState: function(key) {\n    return new ReactLink(\n      this.state[key],\n      ReactStateSetters.createStateKeySetter(this, key)\n    );\n  }\n};\n\nmodule.exports = LinkedStateMixin;\n"]},"metadata":{},"sourceType":"script"}