{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\"use strict\";\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement && nextElement && prevElement.type === nextElement.type && prevElement.key === nextElement.key && prevElement._owner === nextElement._owner) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/shouldUpdateReactComponent.js"],"names":["shouldUpdateReactComponent","prevElement","nextElement","type","key","_owner","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA;AAEA;;;;;;;;;;;;AAWA,SAASA,0BAAT,CAAoCC,WAApC,EAAiDC,WAAjD,EAA8D;AAC5D,MAAID,WAAW,IAAIC,WAAf,IACAD,WAAW,CAACE,IAAZ,KAAqBD,WAAW,CAACC,IADjC,IAEAF,WAAW,CAACG,GAAZ,KAAoBF,WAAW,CAACE,GAFhC,IAGAH,WAAW,CAACI,MAAZ,KAAuBH,WAAW,CAACG,MAHvC,EAG+C;AAC7C,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBP,0BAAjB","sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n\"use strict\";\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  if (prevElement && nextElement &&\n      prevElement.type === nextElement.type &&\n      prevElement.key === nextElement.key &&\n      prevElement._owner === nextElement._owner) {\n    return true;\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n"]},"metadata":{},"sourceType":"script"}