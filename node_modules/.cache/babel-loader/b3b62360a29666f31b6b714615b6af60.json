{"ast":null,"code":"/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLegacyElement\n */\n\"use strict\";\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar invariant = require(\"./invariant\");\n\nvar monitorCodeUse = require(\"./monitorCodeUse\");\n\nvar warning = require(\"./warning\");\n\nvar legacyFactoryLogs = {};\n\nfunction warnForLegacyFactoryCall() {\n  if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {\n    return;\n  }\n\n  var owner = ReactCurrentOwner.current;\n  var name = owner && owner.constructor ? owner.constructor.displayName : '';\n\n  if (!name) {\n    name = 'Something';\n  }\n\n  if (legacyFactoryLogs.hasOwnProperty(name)) {\n    return;\n  }\n\n  legacyFactoryLogs[name] = true;\n  \"production\" !== process.env.NODE_ENV ? warning(false, name + ' is calling a React component directly. ' + 'Use a factory or JSX instead. See: http://fb.me/react-legacyfactory') : null;\n  monitorCodeUse('react_legacy_factory_call', {\n    version: 3,\n    name: name\n  });\n}\n\nfunction warnForPlainFunctionType(type) {\n  var isReactClass = type.prototype && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n\n  if (isReactClass) {\n    \"production\" !== process.env.NODE_ENV ? warning(false, 'Did not expect to get a React class here. Use `Component` instead ' + 'of `Component.type` or `this.constructor`.') : null;\n  } else {\n    if (!type._reactWarnedForThisType) {\n      try {\n        type._reactWarnedForThisType = true;\n      } catch (x) {// just incase this is a frozen object or some special object\n      }\n\n      monitorCodeUse('react_non_component_in_jsx', {\n        version: 3,\n        name: type.name\n      });\n    }\n\n    \"production\" !== process.env.NODE_ENV ? warning(false, 'This JSX uses a plain function. Only React components are ' + 'valid in React\\'s JSX transform.') : null;\n  }\n}\n\nfunction warnForNonLegacyFactory(type) {\n  \"production\" !== process.env.NODE_ENV ? warning(false, 'Do not pass React.DOM.' + type.type + ' to JSX or createFactory. ' + 'Use the string \"' + type.type + '\" instead.') : null;\n}\n/**\n * Transfer static properties from the source to the target. Functions are\n * rebound to have this reflect the original source.\n */\n\n\nfunction proxyStaticMethods(target, source) {\n  if (typeof source !== 'function') {\n    return;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var value = source[key];\n\n      if (typeof value === 'function') {\n        var bound = value.bind(source); // Copy any properties defined on the function, such as `isRequired` on\n        // a PropTypes validator.\n\n        for (var k in value) {\n          if (value.hasOwnProperty(k)) {\n            bound[k] = value[k];\n          }\n        }\n\n        target[key] = bound;\n      } else {\n        target[key] = value;\n      }\n    }\n  }\n} // We use an object instead of a boolean because booleans are ignored by our\n// mocking libraries when these factories gets mocked.\n\n\nvar LEGACY_MARKER = {};\nvar NON_LEGACY_MARKER = {};\nvar ReactLegacyElementFactory = {};\n\nReactLegacyElementFactory.wrapCreateFactory = function (createFactory) {\n  var legacyCreateFactory = function (type) {\n    if (typeof type !== 'function') {\n      // Non-function types cannot be legacy factories\n      return createFactory(type);\n    }\n\n    if (type.isReactNonLegacyFactory) {\n      // This is probably a factory created by ReactDOM we unwrap it to get to\n      // the underlying string type. It shouldn't have been passed here so we\n      // warn.\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnForNonLegacyFactory(type);\n      }\n\n      return createFactory(type.type);\n    }\n\n    if (type.isReactLegacyFactory) {\n      // This is probably a legacy factory created by ReactCompositeComponent.\n      // We unwrap it to get to the underlying class.\n      return createFactory(type.type);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForPlainFunctionType(type);\n    } // Unless it's a legacy factory, then this is probably a plain function,\n    // that is expecting to be invoked by JSX. We can just return it as is.\n\n\n    return type;\n  };\n\n  return legacyCreateFactory;\n};\n\nReactLegacyElementFactory.wrapCreateElement = function (createElement) {\n  var legacyCreateElement = function (type, props, children) {\n    if (typeof type !== 'function') {\n      // Non-function types cannot be legacy factories\n      return createElement.apply(this, arguments);\n    }\n\n    var args;\n\n    if (type.isReactNonLegacyFactory) {\n      // This is probably a factory created by ReactDOM we unwrap it to get to\n      // the underlying string type. It shouldn't have been passed here so we\n      // warn.\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnForNonLegacyFactory(type);\n      }\n\n      args = Array.prototype.slice.call(arguments, 0);\n      args[0] = type.type;\n      return createElement.apply(this, args);\n    }\n\n    if (type.isReactLegacyFactory) {\n      // This is probably a legacy factory created by ReactCompositeComponent.\n      // We unwrap it to get to the underlying class.\n      if (type._isMockFunction) {\n        // If this is a mock function, people will expect it to be called. We\n        // will actually call the original mock factory function instead. This\n        // future proofs unit testing that assume that these are classes.\n        type.type._mockedReactClassConstructor = type;\n      }\n\n      args = Array.prototype.slice.call(arguments, 0);\n      args[0] = type.type;\n      return createElement.apply(this, args);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForPlainFunctionType(type);\n    } // This is being called with a plain function we should invoke it\n    // immediately as if this was used with legacy JSX.\n\n\n    return type.apply(null, Array.prototype.slice.call(arguments, 1));\n  };\n\n  return legacyCreateElement;\n};\n\nReactLegacyElementFactory.wrapFactory = function (factory) {\n  \"production\" !== process.env.NODE_ENV ? invariant(typeof factory === 'function', 'This is suppose to accept a element factory') : invariant(typeof factory === 'function');\n\n  var legacyElementFactory = function (config, children) {\n    // This factory should not be called when JSX is used. Use JSX instead.\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForLegacyFactoryCall();\n    }\n\n    return factory.apply(this, arguments);\n  };\n\n  proxyStaticMethods(legacyElementFactory, factory.type);\n  legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;\n  legacyElementFactory.type = factory.type;\n  return legacyElementFactory;\n}; // This is used to mark a factory that will remain. E.g. we're allowed to call\n// it as a function. However, you're not suppose to pass it to createElement\n// or createFactory, so it will warn you if you do.\n\n\nReactLegacyElementFactory.markNonLegacyFactory = function (factory) {\n  factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;\n  return factory;\n}; // Checks if a factory function is actually a legacy factory pretending to\n// be a class.\n\n\nReactLegacyElementFactory.isValidFactory = function (factory) {\n  // TODO: This will be removed and moved into a class validator or something.\n  return typeof factory === 'function' && factory.isReactLegacyFactory === LEGACY_MARKER;\n};\n\nReactLegacyElementFactory.isValidClass = function (factory) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    \"production\" !== process.env.NODE_ENV ? warning(false, 'isValidClass is deprecated and will be removed in a future release. ' + 'Use a more specific validator instead.') : null;\n  }\n\n  return ReactLegacyElementFactory.isValidFactory(factory);\n};\n\nReactLegacyElementFactory._isLegacyCallWarningEnabled = true;\nmodule.exports = ReactLegacyElementFactory;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/ReactLegacyElement.js"],"names":["ReactCurrentOwner","require","invariant","monitorCodeUse","warning","legacyFactoryLogs","warnForLegacyFactoryCall","ReactLegacyElementFactory","_isLegacyCallWarningEnabled","owner","current","name","constructor","displayName","hasOwnProperty","process","env","NODE_ENV","version","warnForPlainFunctionType","type","isReactClass","prototype","mountComponent","receiveComponent","_reactWarnedForThisType","x","warnForNonLegacyFactory","proxyStaticMethods","target","source","key","value","bound","bind","k","LEGACY_MARKER","NON_LEGACY_MARKER","wrapCreateFactory","createFactory","legacyCreateFactory","isReactNonLegacyFactory","isReactLegacyFactory","wrapCreateElement","createElement","legacyCreateElement","props","children","apply","arguments","args","Array","slice","call","_isMockFunction","_mockedReactClassConstructor","wrapFactory","factory","legacyElementFactory","config","markNonLegacyFactory","isValidFactory","isValidClass","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLegacyElement\n */\n\n\"use strict\";\n\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar invariant = require(\"./invariant\");\nvar monitorCodeUse = require(\"./monitorCodeUse\");\nvar warning = require(\"./warning\");\n\nvar legacyFactoryLogs = {};\nfunction warnForLegacyFactoryCall() {\n  if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {\n    return;\n  }\n  var owner = ReactCurrentOwner.current;\n  var name = owner && owner.constructor ? owner.constructor.displayName : '';\n  if (!name) {\n    name = 'Something';\n  }\n  if (legacyFactoryLogs.hasOwnProperty(name)) {\n    return;\n  }\n  legacyFactoryLogs[name] = true;\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    name + ' is calling a React component directly. ' +\n    'Use a factory or JSX instead. See: http://fb.me/react-legacyfactory'\n  ) : null);\n  monitorCodeUse('react_legacy_factory_call', { version: 3, name: name });\n}\n\nfunction warnForPlainFunctionType(type) {\n  var isReactClass =\n    type.prototype &&\n    typeof type.prototype.mountComponent === 'function' &&\n    typeof type.prototype.receiveComponent === 'function';\n  if (isReactClass) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Did not expect to get a React class here. Use `Component` instead ' +\n      'of `Component.type` or `this.constructor`.'\n    ) : null);\n  } else {\n    if (!type._reactWarnedForThisType) {\n      try {\n        type._reactWarnedForThisType = true;\n      } catch (x) {\n        // just incase this is a frozen object or some special object\n      }\n      monitorCodeUse(\n        'react_non_component_in_jsx',\n        { version: 3, name: type.name }\n      );\n    }\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'This JSX uses a plain function. Only React components are ' +\n      'valid in React\\'s JSX transform.'\n    ) : null);\n  }\n}\n\nfunction warnForNonLegacyFactory(type) {\n  (\"production\" !== process.env.NODE_ENV ? warning(\n    false,\n    'Do not pass React.DOM.' + type.type + ' to JSX or createFactory. ' +\n    'Use the string \"' + type.type + '\" instead.'\n  ) : null);\n}\n\n/**\n * Transfer static properties from the source to the target. Functions are\n * rebound to have this reflect the original source.\n */\nfunction proxyStaticMethods(target, source) {\n  if (typeof source !== 'function') {\n    return;\n  }\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var value = source[key];\n      if (typeof value === 'function') {\n        var bound = value.bind(source);\n        // Copy any properties defined on the function, such as `isRequired` on\n        // a PropTypes validator.\n        for (var k in value) {\n          if (value.hasOwnProperty(k)) {\n            bound[k] = value[k];\n          }\n        }\n        target[key] = bound;\n      } else {\n        target[key] = value;\n      }\n    }\n  }\n}\n\n// We use an object instead of a boolean because booleans are ignored by our\n// mocking libraries when these factories gets mocked.\nvar LEGACY_MARKER = {};\nvar NON_LEGACY_MARKER = {};\n\nvar ReactLegacyElementFactory = {};\n\nReactLegacyElementFactory.wrapCreateFactory = function(createFactory) {\n  var legacyCreateFactory = function(type) {\n    if (typeof type !== 'function') {\n      // Non-function types cannot be legacy factories\n      return createFactory(type);\n    }\n\n    if (type.isReactNonLegacyFactory) {\n      // This is probably a factory created by ReactDOM we unwrap it to get to\n      // the underlying string type. It shouldn't have been passed here so we\n      // warn.\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnForNonLegacyFactory(type);\n      }\n      return createFactory(type.type);\n    }\n\n    if (type.isReactLegacyFactory) {\n      // This is probably a legacy factory created by ReactCompositeComponent.\n      // We unwrap it to get to the underlying class.\n      return createFactory(type.type);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForPlainFunctionType(type);\n    }\n\n    // Unless it's a legacy factory, then this is probably a plain function,\n    // that is expecting to be invoked by JSX. We can just return it as is.\n    return type;\n  };\n  return legacyCreateFactory;\n};\n\nReactLegacyElementFactory.wrapCreateElement = function(createElement) {\n  var legacyCreateElement = function(type, props, children) {\n    if (typeof type !== 'function') {\n      // Non-function types cannot be legacy factories\n      return createElement.apply(this, arguments);\n    }\n\n    var args;\n\n    if (type.isReactNonLegacyFactory) {\n      // This is probably a factory created by ReactDOM we unwrap it to get to\n      // the underlying string type. It shouldn't have been passed here so we\n      // warn.\n      if (\"production\" !== process.env.NODE_ENV) {\n        warnForNonLegacyFactory(type);\n      }\n      args = Array.prototype.slice.call(arguments, 0);\n      args[0] = type.type;\n      return createElement.apply(this, args);\n    }\n\n    if (type.isReactLegacyFactory) {\n      // This is probably a legacy factory created by ReactCompositeComponent.\n      // We unwrap it to get to the underlying class.\n      if (type._isMockFunction) {\n        // If this is a mock function, people will expect it to be called. We\n        // will actually call the original mock factory function instead. This\n        // future proofs unit testing that assume that these are classes.\n        type.type._mockedReactClassConstructor = type;\n      }\n      args = Array.prototype.slice.call(arguments, 0);\n      args[0] = type.type;\n      return createElement.apply(this, args);\n    }\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForPlainFunctionType(type);\n    }\n\n    // This is being called with a plain function we should invoke it\n    // immediately as if this was used with legacy JSX.\n    return type.apply(null, Array.prototype.slice.call(arguments, 1));\n  };\n  return legacyCreateElement;\n};\n\nReactLegacyElementFactory.wrapFactory = function(factory) {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    typeof factory === 'function',\n    'This is suppose to accept a element factory'\n  ) : invariant(typeof factory === 'function'));\n  var legacyElementFactory = function(config, children) {\n    // This factory should not be called when JSX is used. Use JSX instead.\n    if (\"production\" !== process.env.NODE_ENV) {\n      warnForLegacyFactoryCall();\n    }\n    return factory.apply(this, arguments);\n  };\n  proxyStaticMethods(legacyElementFactory, factory.type);\n  legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;\n  legacyElementFactory.type = factory.type;\n  return legacyElementFactory;\n};\n\n// This is used to mark a factory that will remain. E.g. we're allowed to call\n// it as a function. However, you're not suppose to pass it to createElement\n// or createFactory, so it will warn you if you do.\nReactLegacyElementFactory.markNonLegacyFactory = function(factory) {\n  factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;\n  return factory;\n};\n\n// Checks if a factory function is actually a legacy factory pretending to\n// be a class.\nReactLegacyElementFactory.isValidFactory = function(factory) {\n  // TODO: This will be removed and moved into a class validator or something.\n  return typeof factory === 'function' &&\n    factory.isReactLegacyFactory === LEGACY_MARKER;\n};\n\nReactLegacyElementFactory.isValidClass = function(factory) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'isValidClass is deprecated and will be removed in a future release. ' +\n      'Use a more specific validator instead.'\n    ) : null);\n  }\n  return ReactLegacyElementFactory.isValidFactory(factory);\n};\n\nReactLegacyElementFactory._isLegacyCallWarningEnabled = true;\n\nmodule.exports = ReactLegacyElementFactory;\n"]},"metadata":{},"sourceType":"script"}