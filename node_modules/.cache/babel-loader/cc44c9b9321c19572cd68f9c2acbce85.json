{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\"use strict\";\n\nvar CSSProperty = require(\"./CSSProperty\");\n\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar camelizeStyleName = require(\"./camelizeStyleName\");\n\nvar dangerousStyleValue = require(\"./dangerousStyleValue\");\n\nvar hyphenateStyleName = require(\"./hyphenateStyleName\");\n\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\n\nvar warning = require(\"./warning\");\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\nvar styleFloatAccessor = 'cssFloat';\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var warnedStyleNames = {};\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    \"production\" !== process.env.NODE_ENV ? warning(false, 'Unsupported style property ' + name + '. Did you mean ' + camelizeStyleName(name) + '?') : null;\n  };\n}\n/**\n * Operations for dealing with CSS properties.\n */\n\n\nvar CSSPropertyOperations = {\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles) {\n    var serialized = '';\n\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (styleName.indexOf('-') > -1) {\n          warnHyphenatedStyleName(styleName);\n        }\n      }\n\n      var styleValue = styles[styleName];\n\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function (node, styles) {\n    var style = node.style;\n\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (styleName.indexOf('-') > -1) {\n          warnHyphenatedStyleName(styleName);\n        }\n      }\n\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];\n\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n};\nmodule.exports = CSSPropertyOperations;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/CSSPropertyOperations.js"],"names":["CSSProperty","require","ExecutionEnvironment","camelizeStyleName","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","warning","processStyleName","styleName","styleFloatAccessor","canUseDOM","document","documentElement","style","cssFloat","undefined","process","env","NODE_ENV","warnedStyleNames","warnHyphenatedStyleName","name","hasOwnProperty","CSSPropertyOperations","createMarkupForStyles","styles","serialized","indexOf","styleValue","setValueForStyles","node","expansion","shorthandPropertyExpansions","individualStyleName","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n\"use strict\";\n\nvar CSSProperty = require(\"./CSSProperty\");\nvar ExecutionEnvironment = require(\"./ExecutionEnvironment\");\n\nvar camelizeStyleName = require(\"./camelizeStyleName\");\nvar dangerousStyleValue = require(\"./dangerousStyleValue\");\nvar hyphenateStyleName = require(\"./hyphenateStyleName\");\nvar memoizeStringOnly = require(\"./memoizeStringOnly\");\nvar warning = require(\"./warning\");\n\nvar processStyleName = memoizeStringOnly(function(styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (\"production\" !== process.env.NODE_ENV) {\n  var warnedStyleNames = {};\n\n  var warnHyphenatedStyleName = function(name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      false,\n      'Unsupported style property ' + name + '. Did you mean ' +\n      camelizeStyleName(name) + '?'\n    ) : null);\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function(styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (styleName.indexOf('-') > -1) {\n          warnHyphenatedStyleName(styleName);\n        }\n      }\n      var styleValue = styles[styleName];\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function(node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (\"production\" !== process.env.NODE_ENV) {\n        if (styleName.indexOf('-') > -1) {\n          warnHyphenatedStyleName(styleName);\n        }\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n"]},"metadata":{},"sourceType":"script"}