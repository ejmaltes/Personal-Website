{"ast":null,"code":"/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\"use strict\";\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\n\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar warning = require(\"./warning\"); // Store a reference to the <option> `ReactDOMComponent`. TODO: use string\n\n\nvar option = ReactElement.createFactory(ReactDOM.option.type);\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\n\nvar ReactDOMOption = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMOption',\n  mixins: [ReactBrowserComponentMixin],\n  componentWillMount: function () {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      \"production\" !== process.env.NODE_ENV ? warning(this.props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : null;\n    }\n  },\n  render: function () {\n    return option(this.props, this.props.children);\n  }\n});\nmodule.exports = ReactDOMOption;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/ReactDOMOption.js"],"names":["ReactBrowserComponentMixin","require","ReactCompositeComponent","ReactElement","ReactDOM","warning","option","createFactory","type","ReactDOMOption","createClass","displayName","mixins","componentWillMount","process","env","NODE_ENV","props","selected","render","children","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,0BAA0B,GAAGC,OAAO,CAAC,8BAAD,CAAxC;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,2BAAD,CAArC;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAII,OAAO,GAAGJ,OAAO,CAAC,WAAD,CAArB,C,CAEA;;;AACA,IAAIK,MAAM,GAAGH,YAAY,CAACI,aAAb,CAA2BH,QAAQ,CAACE,MAAT,CAAgBE,IAA3C,CAAb;AAEA;;;;AAGA,IAAIC,cAAc,GAAGP,uBAAuB,CAACQ,WAAxB,CAAoC;AACvDC,EAAAA,WAAW,EAAE,gBAD0C;AAGvDC,EAAAA,MAAM,EAAE,CAACZ,0BAAD,CAH+C;AAKvDa,EAAAA,kBAAkB,EAAE,YAAW;AAC7B;AACA,QAAI,iBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;AACxC,uBAAiBF,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCX,OAAO,CAC9C,KAAKY,KAAL,CAAWC,QAAX,IAAuB,IADuB,EAE9C,oEACA,iCAH8C,CAA/C,GAIG,IAJJ;AAKD;AACF,GAdsD;AAgBvDC,EAAAA,MAAM,EAAE,YAAW;AACjB,WAAOb,MAAM,CAAC,KAAKW,KAAN,EAAa,KAAKA,KAAL,CAAWG,QAAxB,CAAb;AACD;AAlBsD,CAApC,CAArB;AAsBAC,MAAM,CAACC,OAAP,GAAiBb,cAAjB","sourcesContent":["/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n\"use strict\";\n\nvar ReactBrowserComponentMixin = require(\"./ReactBrowserComponentMixin\");\nvar ReactCompositeComponent = require(\"./ReactCompositeComponent\");\nvar ReactElement = require(\"./ReactElement\");\nvar ReactDOM = require(\"./ReactDOM\");\n\nvar warning = require(\"./warning\");\n\n// Store a reference to the <option> `ReactDOMComponent`. TODO: use string\nvar option = ReactElement.createFactory(ReactDOM.option.type);\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = ReactCompositeComponent.createClass({\n  displayName: 'ReactDOMOption',\n\n  mixins: [ReactBrowserComponentMixin],\n\n  componentWillMount: function() {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        this.props.selected == null,\n        'Use the `defaultValue` or `value` props on <select> instead of ' +\n        'setting `selected` on <option>.'\n      ) : null);\n    }\n  },\n\n  render: function() {\n    return option(this.props, this.props.children);\n  }\n\n});\n\nmodule.exports = ReactDOMOption;\n"]},"metadata":{},"sourceType":"script"}