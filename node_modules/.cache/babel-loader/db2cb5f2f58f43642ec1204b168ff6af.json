{"ast":null,"code":"/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\"use strict\";\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\nvar component; // This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\n\nvar nullComponentIdsRegistry = {};\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function (emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n/**\n * @return {ReactComponent} component The injected empty component.\n */\n\nfunction getEmptyComponent() {\n  \"production\" !== process.env.NODE_ENV ? invariant(component, 'Trying to return null from a render, but no null placeholder component ' + 'was injected.') : invariant(component);\n  return component();\n}\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\n\n\nfunction registerNullComponentID(id) {\n  nullComponentIdsRegistry[id] = true;\n}\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\n\n\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIdsRegistry[id];\n}\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\n\n\nfunction isNullComponentID(id) {\n  return nullComponentIdsRegistry[id];\n}\n\nvar ReactEmptyComponent = {\n  deregisterNullComponentID: deregisterNullComponentID,\n  getEmptyComponent: getEmptyComponent,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID,\n  registerNullComponentID: registerNullComponentID\n};\nmodule.exports = ReactEmptyComponent;","map":{"version":3,"sources":["/Users/ejmaltes/Desktop/Personal-Website/node_modules/react-object-fit-cover/node_modules/react/lib/ReactEmptyComponent.js"],"names":["ReactElement","require","invariant","component","nullComponentIdsRegistry","ReactEmptyComponentInjection","injectEmptyComponent","emptyComponent","createFactory","getEmptyComponent","process","env","NODE_ENV","registerNullComponentID","id","deregisterNullComponentID","isNullComponentID","ReactEmptyComponent","injection","module","exports"],"mappings":"AAAA;;;;;;;;;;AAWA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AAEA,IAAIE,SAAJ,C,CACA;AACA;;AACA,IAAIC,wBAAwB,GAAG,EAA/B;AAEA,IAAIC,4BAA4B,GAAG;AACjCC,EAAAA,oBAAoB,EAAE,UAASC,cAAT,EAAyB;AAC7CJ,IAAAA,SAAS,GAAGH,YAAY,CAACQ,aAAb,CAA2BD,cAA3B,CAAZ;AACD;AAHgC,CAAnC;AAMA;;;;AAGA,SAASE,iBAAT,GAA6B;AAC1B,mBAAiBC,OAAO,CAACC,GAAR,CAAYC,QAA7B,GAAwCV,SAAS,CAChDC,SADgD,EAEhD,4EACA,eAHgD,CAAjD,GAIGD,SAAS,CAACC,SAAD,CAJb;AAKA,SAAOA,SAAS,EAAhB;AACD;AAED;;;;;;AAIA,SAASU,uBAAT,CAAiCC,EAAjC,EAAqC;AACnCV,EAAAA,wBAAwB,CAACU,EAAD,CAAxB,GAA+B,IAA/B;AACD;AAED;;;;;;AAIA,SAASC,yBAAT,CAAmCD,EAAnC,EAAuC;AACrC,SAAOV,wBAAwB,CAACU,EAAD,CAA/B;AACD;AAED;;;;;;AAIA,SAASE,iBAAT,CAA2BF,EAA3B,EAA+B;AAC7B,SAAOV,wBAAwB,CAACU,EAAD,CAA/B;AACD;;AAED,IAAIG,mBAAmB,GAAG;AACxBF,EAAAA,yBAAyB,EAAEA,yBADH;AAExBN,EAAAA,iBAAiB,EAAEA,iBAFK;AAGxBS,EAAAA,SAAS,EAAEb,4BAHa;AAIxBW,EAAAA,iBAAiB,EAAEA,iBAJK;AAKxBH,EAAAA,uBAAuB,EAAEA;AALD,CAA1B;AAQAM,MAAM,CAACC,OAAP,GAAiBH,mBAAjB","sourcesContent":["/**\n * Copyright 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n\"use strict\";\n\nvar ReactElement = require(\"./ReactElement\");\n\nvar invariant = require(\"./invariant\");\n\nvar component;\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIdsRegistry = {};\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function(emptyComponent) {\n    component = ReactElement.createFactory(emptyComponent);\n  }\n};\n\n/**\n * @return {ReactComponent} component The injected empty component.\n */\nfunction getEmptyComponent() {\n  (\"production\" !== process.env.NODE_ENV ? invariant(\n    component,\n    'Trying to return null from a render, but no null placeholder component ' +\n    'was injected.'\n  ) : invariant(component));\n  return component();\n}\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIdsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIdsRegistry[id];\n}\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return nullComponentIdsRegistry[id];\n}\n\nvar ReactEmptyComponent = {\n  deregisterNullComponentID: deregisterNullComponentID,\n  getEmptyComponent: getEmptyComponent,\n  injection: ReactEmptyComponentInjection,\n  isNullComponentID: isNullComponentID,\n  registerNullComponentID: registerNullComponentID\n};\n\nmodule.exports = ReactEmptyComponent;\n"]},"metadata":{},"sourceType":"script"}